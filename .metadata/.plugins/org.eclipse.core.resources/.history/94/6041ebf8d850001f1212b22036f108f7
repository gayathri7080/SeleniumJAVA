package extenetReports;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

public class ExtenetReportManager implements ITestListener
{

	public ExtentSparkReporter sparkReporter;	//UI of Report
	public ExtentReports extent; //populate common info on report
	public ExtentTest test; //creating test case entries in report and update status of the test
	
	public void onStart(ITestContext context)
	{
		sparkReporter = new ExtentSparkReporter(System.getProperty("user.dir")+ "/reports/myReport.html");  //give the specific location of file
		
		sparkReporter.config().setDocumentTitle("Automation Report");   //Title of Report
		sparkReporter.config().setReportName("Functional Testing"); 	//name of Report
		sparkReporter.config().setTheme(Theme.DARK);
		
		extent = new ExtentReports();
		extent.attachReporter(sparkReporter);
		
		extent.setSystemInfo("Compurt Name", "localhost");
		extent.setSystemInfo("Environment", "QA");
		extent.setSystemInfo("Tester Name", "Gayathri");
		extent.setSystemInfo("os", "Windows10");
		extent.setSystemInfo("Browser name", "Chrome");

		
	}
	
	public void onTestSuccess(ITestResult result)
	{
		test = extent.createTest(result.getName());	//create new entry in report
		test.log(Status.PASS, "Test case PASSED is : "  +  result.getName());  	//update status p/f/s
		
	}
	
	public void onTestFailure(ITestResult result)
	{
		test = extent.createTest(result.getName());
		test.log(Status.FAIL, "test case FAILED is : "  + result.getName());
		test.log(Status.FAIL, "Test case FAILED cause is:"  + result.getThrowable());
		
	}
	
	public void onTestSkipped(ITestResult result)
	{
		test = extent.createTest(result.getName());
		test.log(Status.SKIP, "test case Skipped is" :  + result.getName());
	}
	
	
}
