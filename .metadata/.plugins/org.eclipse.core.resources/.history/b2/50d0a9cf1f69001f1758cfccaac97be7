package testCases;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

import pageObjects.HomePage;
import pageObjects.LoginPage;
import pageObjects.MyAccountPage;
import testBase.BaseClass;
import utilities.DataProviders;

public class TC003_LoginDDT extends BaseClass 
{

	 @Test(dataProvider = "LoginData", dataProviderClass = DataProviders.class)
	    public void verify_LoginDDT(String email, String pwd, String exp) {
	        logger.info("*****Started TC003_LoginDDT*****");
	        
	        // Initialize SoftAssert
	        SoftAssert softAssert = new SoftAssert();
	        
	        try {
	            HomePage hp = new HomePage(driver);
	            hp.clickMyAct();
	            hp.clickLogin();
	            
	            LoginPage lp = new LoginPage(driver);
	            lp.setEmail(email);
	            lp.setPwd(pwd);
	            lp.clickLogin();
	            
	            // MyAccount
	            MyAccountPage macc = new MyAccountPage(driver);
	            boolean targetPage = macc.isMyAccountExsists();
	            
	            if (exp.equalsIgnoreCase("Valid")) {
	                if (targetPage == true) {
	                    logger.info("Login succeeded for valid credentials: " + email);
	                    macc.clickLogout();
	                    softAssert.assertTrue(true, "Login succeeded for valid credentials: " + email);
	                } else {
	                    logger.info("Login failed for valid credentials: " + email);
	                    softAssert.assertTrue(false, "Login failed for valid credentials: " + email);
	                }
	            }
	            
	            if (exp.equalsIgnoreCase("Invalid")) {
	                if (targetPage == true) {
	                    logger.info("Login succeeded for invalid credentials: " + email);
	                    macc.clickLogout();
	                    softAssert.assertTrue(false, "Login succeeded for invalid credentials: " + email);
	                } else {
	                    logger.info("Login failed as expected for invalid credentials: " + email);
	                    softAssert.assertTrue(true, "Login failed as expected for invalid credentials: " + email);
	                }
	            }
	            
	        } catch (Exception e) {
	            logger.error("Test execution failed for email: " + email + " due to exception: " + e.getMessage());
	            softAssert.fail("Test execution failed for email: " + email + " due to exception: " + e.getMessage());
	        }
	        
	        // Assert all to catch all failures
	        softAssert.assertAll();
	        
	        logger.info("*****Ended TC003_LoginDDT*****");
	    }
	
	
}
